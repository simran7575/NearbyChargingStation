openapi: 3.0.0
info:
  title: Nearby Charging Station API
  description: Creating APIs to find and book nearby charging station for the electric bike
  version: 1.1.0
  contact:
    email: simranbedi7575@gmail.com
    url: "https://google.com"

servers:
  - url: https://nearby-charging-station.herokuapp.com/api/v1
    description: Main (production) server deployed in heroku

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    User:
      type: object
      properties:
        __v:
          type: number
        _id:
          type: string
        createdAt:
          type: string
          format: date-time
        phone:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string

    Socket:
      type: object
      properties:
        __v:
          type: number
        _id:
          type: string
        createdAt:
          type: string
          format: date-time
        plugType:
          type: string
          enum: [Type-A, Type-C]
        status:
          type: string
          enum: [free, booked]
        address:
          type: string
        location:
          type: object
          properties:
            type:
              type: string
            coordinates:
              type: array
              items:
                type: number

paths:
  /signup:
    post:
      tags:
        - User
      summary: sending otp to a new or existing user. two fields - phone number and isLogin (required)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - phone
                - isLogin
              properties:
                phone:
                  phone: string
                  required: true
                isLogin:
                  type: boolean
                  required: true
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  response:
                    type: object
                    properties:
                      to:
                        type: string
                      channel:
                        type: string
                      valid:
                        type: boolean
                      status:
                        type: string
                      lookup:
                        type: object
                        properties:
                          carrier:
                            type: null
                      amount:
                        type: null
                      payee:
                        type: null
                      sendCodeAttempts:
                        type: array
                        items:
                          type: object
                          properties:
                            channel:
                              type: string
                            time:
                              type: string
                              format: date-time
                      dateCreated:
                        type: string
                        format: date-time
                      dateUpdated:
                        type: string
                        format: date-time
                      sna:
                        type: string
        400:
          description: Bad request
        500:
          description: internal server error

  /verify:
    post:
      tags:
        - User
      summary: verifying otp for the new user signing up. required files are - firstname, code and phone. optional fields are - lastname and email.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - phone
                - firstname
                - code
              properties:
                phone:
                  phone: string
                  required: true
                firstname:
                  type: string
                  required: true
                lastname:
                  type: string
                email:
                  type: string
                code:
                  type: string
                  required: true
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  token:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
        400:
          description: Token Invalid
        500:
          description: internal server error

  /login:
    post:
      tags:
        - User
      summary: verifying otp for the existing user logging in. required files are - code and phone.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - phone
                - code
              properties:
                phone:
                  phone: string
                  required: true
                code:
                  type: string
                  required: true
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  token:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
        400:
          description: Token Invalid
        500:
          description: internal server error

  /allusers:
    get:
      tags:
        - User
      summary: response will be array of all users
      requestBody:

      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        user:
                          $ref: "#/components/schemas/User"
        400:
          description: Bad request
        500:
          description: internal server error
  /user:
    get:
      tags:
        - User
      security:
        - bearerAuth: []
      summary: response will be the details of the user who is logged in.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            required: true
      requestBody:

      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  user:
                    $ref: "#/components/schemas/User"
        400:
          description: Bad request
        500:
          description: internal server error

  /socket/create:
    post:
      tags:
        - Socket
      security:
        - bearerAuth: []
      summary: creating a new socket. required files are - address, latitude and longitude. optional fields is - plugType.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - address
                - latitude
                - longitude
              properties:
                address:
                  phone: string
                  required: true
                latitude:
                  type: number
                  required: true
                longitude:
                  type: number
                  required: true
                plugType:
                  type: string
                  enum: [Type-A, Type-C]

      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  socket:
                    $ref: "#/components/schemas/Socket"
        400:
          description: Token Invalid
        500:
          description: internal server error
